{"version":3,"file":"index.cjs","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,wCCL9D,MAAM,EAA+BC,QAAQ,SCCtC,SAASC,EAAaC,GACzB,MAAOH,EAAOI,IAAY,IAAAC,UAASF,EAAUX,OAE7C,OADA,IAAAc,YAAU,IAAMH,EAAUI,UAAUH,IAAW,CAACD,KACzC,IAAAK,UAAQ,IACJ,IAAIC,MAAMN,EAAW,CACxBX,IAAK,CAACkB,EAAMC,KACR,GAAwB,iBAAbA,EAAX,CAEA,GAAiB,UAAbA,EACA,OAAOX,EACX,IAAI,CAAC,MAAO,aAAaY,SAASD,GAElC,OAAOD,EAAKC,EALQ,CAKC,KAG9B,CAACR,EAAWH,GACnB,C","sources":["webpack://treeduxjs-react/webpack/bootstrap","webpack://treeduxjs-react/webpack/runtime/define property getters","webpack://treeduxjs-react/webpack/runtime/hasOwnProperty shorthand","webpack://treeduxjs-react/webpack/runtime/make namespace object","webpack://treeduxjs-react/external commonjs \"react\"","webpack://treeduxjs-react/./src/Hook/UseStateNode.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","import { useState, useEffect, useMemo } from \"react\";\nexport function useStateNode(stateNode) {\n    const [value, setValue] = useState(stateNode.get());\n    useEffect(() => stateNode.subscribe(setValue), [stateNode]);\n    return useMemo(() => {\n        return new Proxy(stateNode, {\n            get: (self, property) => {\n                if (typeof property !== \"string\")\n                    return undefined;\n                if (property === \"value\")\n                    return value;\n                if ([\"get\", \"subscribe\"].includes(property))\n                    return undefined;\n                return self[property];\n            }\n        });\n    }, [stateNode, value]);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","useStateNode","stateNode","setValue","useState","useEffect","subscribe","useMemo","Proxy","self","property","includes"],"sourceRoot":""}